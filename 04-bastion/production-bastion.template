---
# region TEMPLATE INFO

# BASTION EC2 INSTANCE:
# This CloudFormation template places az EC2 Bastion Instance into one of the Public Subnets of an existing
# Custom Environment.

# EXPECTED EXISTING RESOURCES:
# - CloudFormation production environment Stack
# - EC2 KeyPair for SSH (configurable)

# NOTE:
# The EC2 Bastion Instance have an hourly price, which is billed even if the instance is not in use.

# LICENSE:
# This code is released under the MIT software license, see license.txt in project root for details. No warranty of any kind is
# included, and the copyright notice must be included in redistributions.

# endregion

# TEMPLATE VERSION
AWSTemplateFormatVersion: 2010-09-09

# DESCRIPTION
Description: |-
    Custom production Bastion Stack extending a previously created custom Environment Stack with publicly
    accessible Bastion EC2 Instance

# PARAMETERS
Parameters:
    # ENVIRONMENT
    EnvironmentStackName:
        Description: |-
            Name of an existing custom environment stack
            (Minimum: 5, maximum: 32)
        Type: String
        MinLength: 5
        MaxLength: 32
        AllowedPattern: "[a-z][a-z0-9\\-]+"
        ConstraintDescription: Must begin with a letter, and contain only lowercase alphanumeric characters and dash
    DatabaseStackName:
        Description: |-
            Name of an existing custom database stack
            (optional, minimum: 5, maximum: 32)
        Type: String
        MinLength: 0
        MaxLength: 32
        AllowedPattern: "[a-z][a-z0-9\\-]+"
        ConstraintDescription: Optional value
    # SSH SETTINGS
    SshCidr:
        Description: The IP address CIDR block range that is allowed to SSH into bastion EC2 instance
        Type: String
        MinLength: 9
        MaxLength: 18
        AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|1[0-9]|2[0-9]|3[0-2]))$
        Default: 0.0.0.0/0
        ConstraintDescription: Must be a valid CIDR range of the form x.x.x.x/x
    SshKey:
        Description: Name of an EC2 Key Pair to enable SSH access to the bastion EC2 instance
        Type: AWS::EC2::KeyPair::KeyName
        ConstraintDescription: Must be the name of an existing EC2 Key Pair
    # BASTION INSTANCE
    BastionInstanceType:
        Description: Bastion Instance Type
        Type: String
        Default: t3.micro
        AllowedValues:
            - t3.micro
            - t3.small
            - t3.medium
            - t3.large
            - t3.xlarge
            - m5.large
            - m5.xlarge
            - r5.large
            - r5.xlarge
    BastionAmi:
        Description: Bastion Amazon Machine Image SSM pointer
        Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
        Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
        ConstraintDescription: Must be the name of an Amazon Machine Image SSM pointer
    BastionSubnet:
        Description: Existing Custom Environment public Subnet to place Bastion Instance in
        Type: String
        AllowedValues:
            - "01"
            - "02"
            - "03"
        Default: "01"
        ConstraintDescription: Must provide value
    BastionDbResourceCreation:
        Description: If Bastion DataBase resources should be installed
        Type: String
        AllowedValues:
            - "No"
            - "Yes"
        Default: "Yes"
        ConstraintDescription: Must provide value

# INTERFACE METADATA
Metadata:
    AWS::CloudFormation::Interface:
        ParameterGroups:
            - Label:
                  default: Environment Configuration
              Parameters:
                  - EnvironmentStackName
                  - DatabaseStackName
            - Label:
                  default: SSH Configuration
              Parameters:
                  - SshCidr
                  - SshKey
            - Label:
                  default: Bastion Instance Configuration
              Parameters:
                  - BastionInstanceType
                  - BastionAmi
                  - BastionSubnet
                  - BastionDbResourceCreation
        ParameterLabels:
            # ENVIRONMENT
            EnvironmentStackName:
                default: Custom Environment Stack Name
            DatabaseStackName:
                default: Custom Database Stack Name (optional)
            # SSH
            SshCidr:
                default: SSH CIDR block
            SshKey:
                default: SSH EC2 Key Pair
            # BASTION
            BastionInstanceType:
                default: EC2 Instance Type
            BastionAmi:
                default: EC2 AMI
            BastionSubnet:
                default: Existing Public Subnet
            BastionDbResourceCreation:
                default: Install Database Management Packages

# CONDITIONS
Conditions:
    NoDatabaseStack:
        Fn::Equals: [Ref: DatabaseStackName, ""]
    CreateBastionDbResource:
        Fn::Equals: [Ref: BastionDbResourceCreation, "Yes"]

# AWS RESOURCES TO BE CREATED
Resources:
    #-------------------------------------------------------------------------------
    # region BASTION EC2 INSTANCE SECURITY

    # BASTION SG INGRESS ENTRIES
    BastionSecurityGroupIngressCidrSsh:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            Description: Ingress form SSH CIDR block to SSH
            GroupId:
                Fn::ImportValue: { Fn::Join: ["-", [Ref: EnvironmentStackName, bastion-sg-id]] }
            CidrIp:
                Ref: SshCidr
            IpProtocol: 6 # TCP
            FromPort: 22
            ToPort: 22

    # endregion

    #-------------------------------------------------------------------------------
    # region BASTION EC2 INSTANCE

    # BASTION EC2 INSTANCE
    BastionInstance:
        Type: AWS::EC2::Instance
        Properties:
            InstanceType:
                Ref: BastionInstanceType
            Monitoring: false
            KeyName:
                Ref: SshKey
            ImageId:
                Ref: BastionAmi
            NetworkInterfaces:
                - DeviceIndex: 0
                  AssociatePublicIpAddress: true
                  GroupSet:
                      - Fn::ImportValue: { Fn::Join: ["-", [Ref: EnvironmentStackName, bastion-sg-id]] }
                  SubnetId:
                      Fn::ImportValue:
                          Fn::Join: ["-", [Ref: EnvironmentStackName, subnet, Ref: BastionSubnet, pub-id]]
            # NOTE: multipart user data
            # SEE: https://cloudinit.readthedocs.io/en/latest/topics/examples.html#yaml-examples
            UserData:
                Fn::Base64:
                    Fn::Join:
                        - |+

                        - - |-
                              Content-Type: multipart/mixed; boundary="//"
                              MIME-Version: 1.0

                              --//
                              Content-Type: text/cloud-config; charset="us-ascii"
                              MIME-Version: 1.0
                              Content-Transfer-Encoding: 7bit
                              Content-Disposition: attachment; filename="cloud-config.yml"

                              #cloud-config
                              package_update: true
                              package_upgrade: true
                              packages:
                              - mc
                          - Fn::If:
                                - CreateBastionDbResource
                                - |-
                                    - gcc
                                    - openssl-devel
                                    - mariadb

                                    runcmd:
                                    - cd /root
                                    - wget http://download.redis.io/redis-stable.tar.gz
                                    - tar xzf redis-stable.tar.gz
                                    - rm redis-stable.tar.gz
                                    - cd redis-stable
                                    - make distclean
                                    - make redis-cli BUILD_TLS=yes
                                    - install -m 755 src/redis-cli /usr/local/bin/
                                - Ref: AWS::NoValue
                          - |-

                              --//
                          - |-
                              Content-Type: text/x-shellscript; charset="us-ascii"
                              MIME-Version: 1.0
                              Content-Transfer-Encoding: 7bit
                              Content-Disposition: attachment; filename="user-data.sh"

                              #!/bin/bash
                              cat <<EOT>> /etc/environment
                          - Fn::Join:
                                - ""
                                - - AWS_ALB_DNS=
                                  - Fn::ImportValue: { Fn::Join: ["-", [Ref: EnvironmentStackName, alb-priv-dns]] }
                          - Fn::Join:
                                - ""
                                - - AWS_ALB_HOST=
                                  - Fn::ImportValue: { Fn::Join: ["-", [Ref: EnvironmentStackName, alb-pub-host-dns]] }
                          - Fn::If:
                                - NoDatabaseStack
                                - Ref: AWS::NoValue
                                - Fn::Join:
                                      - |+

                                      - - Fn::Join:
                                              - ""
                                              - - AWS_RDS_DNS=
                                                - Fn::ImportValue:
                                                      Fn::Join: ["-", [Ref: DatabaseStackName, rds-master-db-ep]]
                                        - Fn::Join:
                                              - ""
                                              - - AWS_RDS_PORT=
                                                - Fn::ImportValue:
                                                      Fn::Join: ["-", [Ref: DatabaseStackName, rds-master-db-port]]
                                        - Fn::Join:
                                              - ""
                                              - - AWS_CACHE_DNS=
                                                - Fn::ImportValue:
                                                      Fn::Join: ["-", [Ref: DatabaseStackName, cache-rg-primary-ep]]
                                        - Fn::Join:
                                              - ""
                                              - - AWS_CACHE_PORT=
                                                - Fn::ImportValue:
                                                      Fn::Join: ["-", [Ref: DatabaseStackName, cache-rg-primary-port]]
                          - |-
                              <<EOT>>

                              --//
            Tags:
                - Key: Name
                  Value:
                      Fn::Join: ["-", [Ref: AWS::StackName, bastion-instance]]

    # endregion

# CLOUDFORMATION EXPORTS
Outputs:
    # SETTINGS
    TemplateId:
        Description: Custom CloudFormation template ID
        Value: 04-bastion/production-bastion.template
        Export:
            Name:
                Fn::Join: ["-", [Ref: AWS::StackName, template-id]]
    # BASTION
    BastionDatabaseStackConnected:
        Description: If Bastion is connected to a Database Stack
        Value:
            Fn::If: [NoDatabaseStack, "No", "Yes"]
        Export:
            Name:
                Fn::Join: ["-", [Ref: AWS::StackName, bastion-db-stack]]
    BastionDbResourceCreated:
        Description: If Bastion database resources were installed
        Value:
            Fn::If: [CreateBastionDbResource, "Yes", "No"]
        Export:
            Name:
                Fn::Join: ["-", [Ref: AWS::StackName, bastion-db-resource]]
    BastionInstanceId:
        Description: Bastion Instance ID
        Value:
            Ref: BastionInstance
        Export:
            Name:
                Fn::Join: ["-", [Ref: AWS::StackName, bastion-id]]
    BastionInstancePublicIp:
        Description: Bastion Instance public IP
        Value:
            Fn::GetAtt: BastionInstance.PublicIp
        Export:
            Name:
                Fn::Join: ["-", [Ref: AWS::StackName, bastion-ip]]
